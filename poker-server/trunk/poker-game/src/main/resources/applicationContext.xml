<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		">
	<context:component-scan base-package="com.kunlun.poker.game">
		<context:include-filter type="regex"
			expression=".ctrl.*" />
		<context:include-filter type="regex"
			expression=".service.impl.*" />
	</context:component-scan>

	<import resource="gameServer.xml" />

	<bean id="scheduler" class="com.googlecode.canoe.scheduler.SchedulerImpl">
		<constructor-arg>
			<list>
				<bean class="com.googlecode.canoe.scheduler.WorkerGroup">
					<constructor-arg value="${scheduler.system.threadNum}"
						type="int" />
				</bean>
				<bean class="com.googlecode.canoe.scheduler.WorkerGroup">
					<constructor-arg value="rmi" />
					<constructor-arg value="${scheduler.rmi.threadNum}"
						type="int" />
				</bean>
				<bean class="com.googlecode.canoe.scheduler.WorkerGroup">
					<constructor-arg value="logClient" />
					<constructor-arg value="1" type="int" />
				</bean>
				<bean class="com.googlecode.canoe.scheduler.WorkerGroup">
					<constructor-arg value="logRecord" />
					<constructor-arg value="1" type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<bean id="messageConsistencyKeeper"
		class="com.kunlun.poker.game.system.DeskMessageConsistencyKeeper">
		<property name="sessionRoleManager" ref="sessionRoleManager" />
	</bean>
	<bean id="userRService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
		<property name="serviceUrl" value="${rmi.playerRService.url}" />
		<property name="serviceInterface" value="com.kunlun.poker.rmi.UserRService" />
		<property name="lookupStubOnStartup" value="false" />
		<property name="refreshStubOnConnectFailure" value="true" />
	</bean>
	<bean id="robotRService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="${rmi.robotRService.url}" />
        <property name="serviceInterface" value="com.kunlun.poker.rmi.RobotRService" />
        <property name="lookupStubOnStartup" value="false" />
        <property name="refreshStubOnConnectFailure" value="true" />
    </bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${db.center.driver}"></property>
		<property name="url" value="${db.center.url}"></property>
		<property name="username" value="${db.center.username}"></property>
		<property name="password" value="${db.center.password}"></property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

	</bean>
	<mybatis:scan base-package="com.kunlun.poker.game.data" />
</beans>