<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:comps="poker.comps.*"
					xmlns:views="poker.views.*"
					label="公告管理" show="search(0)">
	<s:layout>
		<s:VerticalLayout horizontalAlign="center"/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import poker.Config;
			import poker.events.PaginationEvent;
			import poker.util.DataUtil;
			
			[Bindable]
			private var model : Object;
			
			protected function paginateHandler(event:PaginationEvent):void
			{
				search((event.page - 1) * Config.PAGESIZE);
			}
			
			private function search(from : int) : void
			{
				listService.send({
					from : from,
					size : Config.PAGESIZE
				});
			}
			
			protected function listService_resultHandler(event:ResultEvent):void
			{
				model = JSON.parse(String(event.result));
			}
			
			protected function httpService_faultHandler(event:FaultEvent):void
			{
				Alert.show(event.toString());
			}
			
			protected function httpService_resultHandler(event:ResultEvent):void
			{
				search((paginator.page - 1)* Config.PAGESIZE);
			}
			
			protected function addButton_clickHandler(event:MouseEvent):void
			{
				noticeWindow.notice = null;
				noticeWindow.open();
			}
			
			protected function editButton_clickHandler(event:MouseEvent):void
			{
				if(dataGrid.selectedItem)
				{
					noticeWindow.notice = dataGrid.selectedItem;
					noticeWindow.open();
				}
				else
				{
					Alert.show("请选择要编辑的项");
				}
			}
			
			protected function noticeWindow_submitHandler(event:Event):void
			{
				var notice : Object = noticeWindow.notice;
				if(notice.id)
				{
					updateService.send(notice)
				}
				else
				{
					addService.send(notice);
				}
			}
			
			protected function removeButton_clickHandler(event:MouseEvent):void
			{
				if(dataGrid.selectedItem)
				{
					removeService.send(dataGrid.selectedItem);
				}
				else
				{
					Alert.show("请选择要删除的项");
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id="listService" fault="httpService_faultHandler(event)"
					   result="listService_resultHandler(event)"
					   url="{Config.URLBASE}notice/list.htm" keepLastResult="false" method="POST"/>
		<s:HTTPService id="addService" fault="httpService_faultHandler(event)"
					   result="httpService_resultHandler(event)" url="{Config.URLBASE}notice/add.htm" method="POST"/>
		<s:HTTPService id="updateService" fault="httpService_faultHandler(event)"
					   result="httpService_resultHandler(event)" url="{Config.URLBASE}notice/update.htm" method="POST"/>
		<s:HTTPService id="removeService" fault="httpService_faultHandler(event)"
					   result="httpService_resultHandler(event)" url="{Config.URLBASE}notice/remove.htm" method="POST"/>
		<views:NoticeWindow id="noticeWindow" submit="noticeWindow_submitHandler(event)"/>	
	</fx:Declarations>
	<s:Group>
		<s:layout>
			<s:HorizontalLayout gap="5" horizontalAlign="center" verticalAlign="middle"/>
		</s:layout>
		<s:Button id="addButton" label="新增" click="addButton_clickHandler(event)"/>
		<s:Button id="editButton" label="编辑" click="editButton_clickHandler(event)"/>
		<s:Button id="removeButton" label="删除" click="removeButton_clickHandler(event)"/>
	</s:Group>	
	<s:Line width="100%">
		<s:stroke>
			<s:SolidColorStroke color="0xeeeeee"/>
		</s:stroke>
	</s:Line>
	<s:DataGrid id="dataGrid" width="100%" height="500">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="title" headerText="标题"/>
				<s:GridColumn dataField="createTime" headerText="创建时间"
							  labelFunction="DataUtil.showDateTime"/>
			</s:ArrayList>
		</s:columns>
		<s:ArrayCollection source="{model.list}"/>
	</s:DataGrid>
	<comps:Paginator id="paginator" page="{DataUtil.getPage(model)}"
					 paginate="paginateHandler(event)" total="{DataUtil.getTotal(model)}"/>
</s:NavigatorContent>
